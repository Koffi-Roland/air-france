<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- !!! DO NOT REMOVE/CHANGE THE <parent>[...]</parent> SECTION !!! Please 
	contact DI.NB through http://fds.airfrance.fr if needed. -->
	<parent>
		<groupId>com.afklm.repind</groupId>
		<artifactId>repind-root</artifactId>
		<version>0.1.0-SNAPSHOT</version>
		<relativePath>../../../pom.xml</relativePath>
	</parent>

	<!-- Description -->	
	<groupId>com.afklm.repind.commons</groupId>
	<artifactId>repind-commons</artifactId>
	<packaging>jar</packaging>

	<properties>
		<jersey-version>2.29.1</jersey-version>
		<jackson-version>2.15.2</jackson-version>
		<jodatime-version>2.7</jodatime-version>
	</properties>
	  	
 	<dependencies>
 	<!-- Compatibility library declare on top to avoid conflict with overriden method signature -->
 	<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
 	
          <dependency>
 		  <!-- Other solution way more performant than dozer now exist. If you have some time, replace dozer by something else -->
		  <groupId>net.sf.dozer</groupId>
		  <artifactId>dozer</artifactId>
		  <version>5.5.1</version>
			<exclusions>
            	<exclusion>
	                <groupId>org.slf4j</groupId>
                	<artifactId>jcl-over-slf4j</artifactId>
            	</exclusion>
            	<exclusion>
	                <groupId>org.slf4j</groupId>
                	<artifactId>slf4j-api</artifactId>
            	</exclusion>

        	</exclusions>
        	<scope>compile</scope>
		</dependency>	
			
		<!-- JEE, required to avoid issue with different java version (aka: include by maven instead of include by JRE) -->
		<!-- 
		<dependency>
		    <groupId>com.sun.xml.ws</groupId>
		    <artifactId>jaxws-rt</artifactId>
		    <version>2.3.0.2</version>
		    <type>pom</type>
		</dependency>
		-->
<!--     prevent SOAPConnectionFactory warning from JDK 8 to 17 upgrade:
		 Using deprecated META-INF/services mechanism with non-standard property:
		javax.xml.soap.MetaFactory. Property javax.xml.soap.SAAJMetaFactory should be used instead.-->
		<dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<version>2.0.0-M1</version>
		</dependency>

		<dependency>
			<groupId>javax.jms</groupId>
			<artifactId>javax.jms-api</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.jws/jsr181-api -->
		<dependency>
			<groupId>javax.jws</groupId>
			<artifactId>jsr181-api</artifactId>
			<version>1.0-MR1</version>
		</dependency>

		<dependency>
        	<groupId>commons-codec</groupId>
        	<artifactId>commons-codec</artifactId>
        </dependency>
    
		<dependency>
    		<groupId>org.slf4j</groupId>
    		<artifactId>jcl-over-slf4j</artifactId>
    		<version>1.7.36</version>
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>7.2</version>
			<!-- Use runtime scope if the project does not have any compile-time usage of logstash-logback-encoder,
                 such as usage of StructuredArguments/Markers or implementations such as
                 JsonProvider, AppenderListener, JsonFactoryDecorator, JsonGeneratorDecorator, etc
            <scope>runtime</scope>
            -->
		</dependency>
		
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-core</artifactId>
		    <version>4.0.2</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-impl</artifactId>
		    <version>4.0.2</version>
		</dependency>
		 
		<dependency>
		    <groupId>javax.activation</groupId>
		    <artifactId>activation</artifactId>
		    <version>1.1.1</version>
		</dependency>

		<!-- START Airfrance dependencies -->
		<dependency>
			<groupId>com.airfrance.soa.security</groupId>
			<artifactId>repind-ws-security</artifactId>
			<version>1.0</version>
		</dependency>
		
		<dependency>
			<groupId>com.afklm.soa.stubs</groupId>
			<artifactId>w000039-v01</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- Utilities -->	
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>32.0.0-jre</version>
		</dependency>
		
		<!-- Stubs for INWEBO -->	
		<dependency>
	  		<groupId>com.afklm.soa.stubs</groupId>
	  		<artifactId>w001793-v01</artifactId>
	  		<version>12</version>
		</dependency>
		<dependency>
		  <groupId>com.afklm.soa.stubs</groupId>
		  <artifactId>w000410-v02</artifactId>
		  <version>1</version>
		</dependency> 	
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>5.4.3.Final</version>
		</dependency> 
		 <!-- End Adhesion -->
		 		
		 <!-- Library with some doubt on their utility but required to compile. -->
		<dependency>
		    <groupId>commons-beanutils</groupId>
		    <artifactId>commons-beanutils</artifactId>
		    <version>1.9.4</version>
		</dependency>
		
		<dependency>
			<groupId>com.afklm.repind.commons</groupId>
			<artifactId>repind-entities</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- slf4j -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.afklm.repind.commons</groupId>
			<artifactId>repind-entities</artifactId>
			<version>${project.version}</version>	
			<type>test-jar</type>		
			<scope>test</scope>	
		</dependency>
		
		<dependency>
			<groupId>com.afklm.repind.commons</groupId>
			<artifactId>repind-payment-preferences-commons</artifactId>
			<version>${project.version}</version>			
		</dependency>
		<dependency>
			<groupId>com.afklm.repind.commons</groupId>
			<artifactId>repind-payment-preferences-commons</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>		
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.afklm.repind.commons</groupId>
			<artifactId>repindutf8-commons</artifactId>
			<version>${project.version}</version>			
		</dependency>
		<dependency>
			<groupId>com.afklm.repind.commons</groupId>
			<artifactId>repindutf8-commons</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>		
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>dk.brics.automaton</groupId>
			<artifactId>automaton</artifactId>
			<version>1.11-8</version>			
			<scope>compile</scope>
		</dependency>
		
		<!-- WS CBS ProvideCustomer360View for RI Purge -->
		<dependency>
  			<groupId>com.afklm.soa.stubs</groupId>
  			<artifactId>w001580-v03</artifactId>
  			<version>8</version>
		</dependency>
		<dependency>
  			<groupId>com.afklm.soa.stubs</groupId>
  			<artifactId>w000548-v01</artifactId>
  			<version>2</version>
		</dependency>
		

		<!-- lib specifique TU -->
		  <dependency>
		    <groupId>com.github.stephenc.jcip</groupId>
		    <artifactId>jcip-annotations</artifactId>
		    <version>1.0-1</version>
		    <scope>test</scope>
		  </dependency>
		

        <!-- ===== LIBS for R/R consumer ==== -->

        <!-- SOA framework for R/R consumer -->
        <dependency>
            <groupId>com.afklm.soa.jaxws</groupId>
            <artifactId>sdfw-consumer-deps</artifactId>
            <version>${afws.version}</version>
            <type>pom</type>
        </dependency>
        
		<dependency>
		  <groupId>com.afklm.soa.jaxws</groupId>
		  <artifactId>sdfw-provider-deps</artifactId>
          <version>${afws.version}</version>
		  <type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.afklm.soa.jaxws</groupId>
  			<artifactId>jaxws-jms</artifactId>
  			<version>${afws.version}</version>
  		</dependency>
        <dependency>
            <groupId>com.afklm.soa.jaxws</groupId>
            <artifactId>sdfw-async-deps</artifactId>
            <version>${afws.version}</version>
            <type>pom</type>
        </dependency>

        <!-- SOA framework security -->
        <dependency>
            <groupId>com.afklm.soa.jaxws.wss</groupId>
            <artifactId>jaxws-sec</artifactId>
            <version>${afws.version}</version>
        </dependency>
        
        <!-- FILE MQ -->
		<dependency>
		  <groupId>com.ibm.mq</groupId>
		  <artifactId>com.ibm.mqjms</artifactId>
		  <version>${mq.version}</version>
		<!-- REPIND-1643 -->	
	  		<scope>provided</scope> 
		</dependency>
		
		<dependency>
		  <groupId>com.afklm.mq</groupId>
		  <artifactId>mq-runtime</artifactId>
		  <version>${mq.version}</version>
		  <type>pom</type>
		</dependency>
		
		<dependency>
	        <groupId>org.mapstruct</groupId>
	        <artifactId>mapstruct</artifactId>
	        <version>1.4.1.Final</version>
    	</dependency>
        
        <!-- https://mvnrepository.com/artifact/com.googlecode.libphonenumber/libphonenumber -->
		<dependency>
		    <groupId>com.googlecode.libphonenumber</groupId>
		    <artifactId>libphonenumber</artifactId>
			<version>8.13.15</version>
		</dependency>

		<!-- HTTP client: jersey-client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey-version}</version>
		</dependency>

		<!-- JSON processing: jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-base</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- Joda time: if you use it -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>2.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okio</groupId>
			<artifactId>okio</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp</groupId>
			<artifactId>okhttp</artifactId>
			<version>2.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.threeten</groupId>
			<artifactId>threetenbp</artifactId>
			<version>1.5.1</version>
		</dependency>

		<!-- Joda time: if you use it -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${jodatime-version}</version>
		</dependency>


		<dependency>
			<groupId>com.github.joschi.jackson</groupId>
			<artifactId>jackson-datatype-threetenbp</artifactId>
			<version>2.6.4</version>
		</dependency>

		<!-- Base64 encoding that works in both JVM and Android -->
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
        <dependency>
            <groupId>org.neo4j.driver</groupId>
            <artifactId>neo4j-java-driver</artifactId>
        </dependency>
    </dependencies>
 	 
 	 <build>
		<plugins>
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>3.0.27</version>
				<dependencies>
					<dependency>
						<groupId>com.github.jknack</groupId>
						<artifactId>handlebars</artifactId>
						<version>4.3.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/dqe_address_api_V3_2_0.json</inputSpec>
							<language>java</language>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<dateLibrary>joda</dateLibrary>
							</configOptions>
							<library>jersey2</library>
							<apiPackage>com.airfrance.repind.client.dqe</apiPackage>
							<modelPackage>com.airfrance.repind.client.dqe</modelPackage>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-jar-plugin</artifactId>
			  <executions>
			    <!-- <execution>
			      <id>Jar Package</id>
			      <phase>package</phase>
			      <goals>
			        <goal>jar</goal>
			      </goals>
			    </execution> -->
			  <execution>
				  <id>Jar Tests Package</id>
				  <phase>package</phase>
				  <goals>
				 	 <goal>test-jar</goal>
				  </goals>
				  </execution>
			  </executions>
			</plugin>
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <version>3.5.1</version><!--$NO-MVN-MAN-VER$-->
	            <configuration>
	                <source>${jdk.version}</source> <!-- depending on your project -->
	                <target>${jdk.version}</target> <!-- depending on your project -->
	                <annotationProcessorPaths>
	                    <path>
	                        <groupId>org.mapstruct</groupId>
	                        <artifactId>mapstruct-processor</artifactId>
	                        <version>1.4.1.Final</version>
	                    </path>
	                    <path>
			                <groupId>org.projectlombok</groupId>
			                <artifactId>lombok-mapstruct-binding</artifactId>
			                <version>0.2.0</version>
			            </path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.26</version>
						</path>
	                    <!-- other annotation processors -->
	                </annotationProcessorPaths>
	            </configuration>
	        </plugin>
		</plugins>
	</build>
</project>
