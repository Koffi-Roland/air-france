<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by com.afklm.dinb.mdd.ws.uml2wsdl version 3.0.1, Build 201509040834 -->
<xsd:schema 

targetNamespace="http://www.af-klm.com/services/passenger/SicOsirisType-v1/xsd" 
	xmlns:tns="http://www.af-klm.com/services/passenger/SicOsirisType-v1/xsd" 
	xmlns:xsd1="http://www.af-klm.com/services/passenger/SicCommonDataType-v1/xsd"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	version="1.1">


  <!-- xsd imports-->
  <xsd:import namespace="http://www.af-klm.com/services/passenger/SicCommonDataType-v1/xsd" schemaLocation="passenger_SicCommonDataType-v1.xsd"/>
	
  <!-- elements declarations -->
  <xsd:element name="CBCPartnerDataElement" type="tns:CBCPartnerData"/>
  <xsd:element name="FlyingBlueContractDataElement" type="tns:FlyingBlueContractData"/>
  <xsd:element name="FlyingBlueContractDataV2Element" type="tns:FlyingBlueContractDataV2"/>
  <xsd:element name="NextTierPossibleDataElement" type="tns:NextTierPossibleData"/>
  <xsd:element name="CurrentTierDataElement" type="tns:CurrentTierData"/>

  <!-- types declarations -->
  <xsd:complexType name="CBCPartnerData">
    <xsd:sequence>
      <xsd:element name="code" type="tns:DTypeCodeCbcPartnerData" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FlyingBlueContractData">
    <xsd:annotation>
      <xsd:documentation>Communication Media code:&#xD;
- C       RELEVE PAR E MAIL              &#xD;
- F       COMMUNICATION EMAIL FORCE       &#xD;
- P       COMMUNICATION PAPIER            &#xD;
- T       TOUTE COMMUNICATION PAR E MAIL                 </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="startMemberShipDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endMemberShipDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="amexContract" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Filled with true, if RI has a contract with AX type and subtype AX in its first 10 contracts. Otherwise False.&#xD;
(!) For the moment this output data is given by RI. In the future it will be filled directly by OSIRIS&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cbcContract" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="status" type="tns:DTypeStatus" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Calculated by Osiris depending on StatusFB :&#xD;
C (*), A (S,X,T), S (F), P (P)  &#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="statusFB" type="tns:DTypeStatusFB" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>* : Valid&#xD;
F : Fraud&#xD;
P : Pending&#xD;
S : Suspend&#xD;
T : Transferred&#xD;
X : Cancelled&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tierLevel" type="xsd1:DTypeTierLevel" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A : FLYING BLUE IVORY (basic)&#xD;
B : FLYING BLUE SILVER &#xD;
R : FLYING BLUE GOLD &#xD;
M : FLYING BLUE PLATINUM &#xD;
C : FLYING BLUE CLUB 2000 &#xD;
P : FLYING BLUE JEUNE / POUSSIN &#xD;
J : FLYING BLUE JEUNE&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstActivityDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="welcomeBonus" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="subtier" type="tns:DTypeSubtier" minOccurs="0"/>
      <xsd:element name="nextSubtier" type="tns:DTypeNextSubtier" minOccurs="0"/>
      <xsd:element name="nextTierLevel" type="tns:DTypeNextSubtierLevel" minOccurs="0"/>
      <xsd:element name="startTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="startNextTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endNextTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="lastModificationDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="lastActivityDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="memberType" type="tns:DTypeMemberType" minOccurs="0"/>
      <xsd:element name="newMemberTypeApplyDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="nextMemberType" type="tns:DTypeNextMemberType" minOccurs="0"/>
      <xsd:element name="oldMemberType" type="tns:DTypeOldMemberType" minOccurs="0"/>
      <xsd:element name="memberTypeChangeDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="memberTypeChangeUser" type="tns:DTypeMemberTypeChangeUser" minOccurs="0"/>
      <xsd:element name="originMember" type="tns:DTypeOriginMember" minOccurs="0"/>
      <xsd:element name="qualificationStatus" type="tns:DTypeQualificationStatus" minOccurs="0"/>
      <xsd:element name="nbYearsPlatinum" type="xsd:int" minOccurs="0"/>
      <xsd:element name="milesExpiryDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="milesExpiryAmount" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesExpiryType" type="tns:DTypeMilesExpiryType" minOccurs="0"/>
      <xsd:element name="milesExpiryProtection" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="milesAmount" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Balance given by ISIS + outstanding managed by Osiris</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="milesStatusAmount" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesStatusPostponed" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesStatusPostponedNextYear" type="xsd:long" minOccurs="0"/>
      <xsd:element name="qSegmentNb" type="xsd:long" minOccurs="0"/>
      <xsd:element name="qSegmentNbPostponed" type="xsd:long" minOccurs="0"/>
      <xsd:element name="ptc" type="tns:DTypePtc" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If tier is A (Basic) or P (very young) or J (Junior), then PTC = ADT &#xD;
If tier Elite (tiers B (Silver) or R (Gold) or M (Platinum) or C (Club 2000), then  PTC = FFP&#xD;
Otherwise ADT&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eliteLevel" type="tns:DTypeEliteLevel" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If tierLevel is B (Silver), eliteLevel =  1 (Elite).&#xD;
if tierLevel is R (Gold) or M (Platinum) or C (Club 2000), eliteLevel = 2 (Elite Plus).&#xD;
Otherwise empty.&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="milesToBuy" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Miles amount still to buy for points.com. The default value is 0.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="poolingAuthorized" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For the moment filled with the amexContract value&#xD;
(!) For the moment this output data is given by RI. In the future it will be filled directly by OSIRIS.&#xD;
New in V4 version.&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="clubPetroleum" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Not filled for the moment&#xD;
New in V4 version.&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="communicationMedia" type="tns:DTypeCommunicationMedia" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Communication media code:&#xD;
C: RELEVE PAR E MAIL    &#xD;
F: COMMUNICATION EMAIL FORCE                        &#xD;
P: COMMUNICATION PAPIER                             &#xD;
T: TOUTE COMMUNICATION PAR E MAIL    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="cbcPartnerData" type="tns:CBCPartnerData" minOccurs="0" maxOccurs="10"/>
      <xsd:element name="nextTierPossibleData" type="tns:NextTierPossibleData" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="currentTierData" type="tns:CurrentTierData" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FlyingBlueContractDataV2">
    <xsd:annotation>
      <xsd:documentation>Communication Media code:&#xD;
- C       RELEVE PAR E MAIL              &#xD;
- F       COMMUNICATION EMAIL FORCE       &#xD;
- P       COMMUNICATION PAPIER            &#xD;
- T       TOUTE COMMUNICATION PAR E MAIL                 </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="startMemberShipDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endMemberShipDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="amexContract" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Filled with true, if RI has a contract with AX type and subtype AX in its first 10 contracts. Otherwise False.&#xD;
(!) For the moment this output data is given by RI. In the future it will be filled directly by OSIRIS&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cbcContract" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="status" type="tns:DTypeStatus" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Calculated by Osiris depending on StatusFB :&#xD;
C (*), A (S,X,T), S (F), P (P)  &#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="statusFB" type="tns:DTypeStatusFB" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>* : Valid&#xD;
F : Fraud&#xD;
P : Pending&#xD;
S : Suspend&#xD;
T : Transferred&#xD;
X : Cancelled&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tierLevel" type="xsd1:DTypeTierLevel" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A : FLYING BLUE IVORY (basic)&#xD;
B : FLYING BLUE SILVER &#xD;
R : FLYING BLUE GOLD &#xD;
M : FLYING BLUE PLATINUM &#xD;
C : FLYING BLUE CLUB 2000 &#xD;
P : FLYING BLUE JEUNE / POUSSIN &#xD;
J : FLYING BLUE JEUNE&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstActivityDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="welcomeBonus" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="subtier" type="tns:DTypeSubtier" minOccurs="0"/>
      <xsd:element name="nextSubtier" type="tns:DTypeNextSubtier" minOccurs="0"/>
      <xsd:element name="nextTierLevel" type="tns:DTypeNextSubtierLevel" minOccurs="0"/>
      <xsd:element name="startTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="startNextTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endNextTierLevelDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="lastModificationDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="lastActivityDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="memberType" type="tns:DTypeMemberType" minOccurs="0"/>
      <xsd:element name="newMemberTypeApplyDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="nextMemberType" type="tns:DTypeNextMemberType" minOccurs="0"/>
      <xsd:element name="oldMemberType" type="tns:DTypeOldMemberType" minOccurs="0"/>
      <xsd:element name="memberTypeChangeDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="memberTypeChangeUser" type="tns:DTypeMemberTypeChangeUser" minOccurs="0"/>
      <xsd:element name="originMember" type="tns:DTypeOriginMember" minOccurs="0"/>
      <xsd:element name="qualificationStatus" type="tns:DTypeQualificationStatus" minOccurs="0"/>
      <xsd:element name="nbYearsPlatinum" type="xsd:int" minOccurs="0"/>
      <xsd:element name="milesExpiryDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="milesExpiryAmount" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesExpiryType" type="tns:DTypeMilesExpiryType" minOccurs="0"/>
      <xsd:element name="milesExpiryProtection" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="milesAmount" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Balance given by ISIS + outstanding managed by Osiris</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="milesStatusAmount" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesStatusPostponed" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesStatusPostponedNextYear" type="xsd:long" minOccurs="0"/>
      <xsd:element name="qSegmentNb" type="xsd:long" minOccurs="0"/>
      <xsd:element name="qSegmentNbPostponed" type="xsd:long" minOccurs="0"/>
      <xsd:element name="ptc" type="tns:DTypePtc" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If tier is A (Basic) or P (very young) or J (Junior), then PTC = ADT &#xD;
If tier Elite (tiers B (Silver) or R (Gold) or M (Platinum) or C (Club 2000), then  PTC = FFP&#xD;
Otherwise ADT&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eliteLevel" type="tns:DTypeEliteLevel" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If tierLevel is B (Silver), eliteLevel =  1 (Elite).&#xD;
if tierLevel is R (Gold) or M (Platinum) or C (Club 2000), eliteLevel = 2 (Elite Plus).&#xD;
Otherwise empty.&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="milesToBuy" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Miles amount still to buy for points.com. The default value is 0.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="poolingAuthorized" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For the moment filled with the amexContract value&#xD;
(!) For the moment this output data is given by RI. In the future it will be filled directly by OSIRIS.&#xD;
New in V4 version.&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="clubPetroleum" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Not filled for the moment&#xD;
New in V4 version.&#xD;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="communicationMedia" type="tns:DTypeCommunicationMedia" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Communication media code:&#xD;
C: RELEVE PAR E MAIL    &#xD;
F: COMMUNICATION EMAIL FORCE                        &#xD;
P: COMMUNICATION PAPIER                             &#xD;
T: TOUTE COMMUNICATION PAR E MAIL    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cbcPartnerData" type="tns:CBCPartnerData" minOccurs="0" maxOccurs="10"/>
      <xsd:element name="nextTierPossibleData" type="tns:NextTierPossibleData" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="currentTierData" type="tns:CurrentTierData" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NextTierPossibleData">
    <xsd:sequence>
      <xsd:element name="code" type="tns:DTypeCodeNextTierPossibleData" minOccurs="0"/>
      <xsd:element name="milesThreshold" type="xsd:long" minOccurs="0"/>
      <xsd:element name="segmentThreshold" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesStatusMissing" type="xsd:long" minOccurs="0"/>
      <xsd:element name="qualifyingSegmentMissing" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CurrentTierData">
    <xsd:sequence>
      <xsd:element name="code" type="tns:DTypeCodeCurrentTierData" minOccurs="0"/>
      <xsd:element name="milesThreshold" type="xsd:long" minOccurs="0"/>
      <xsd:element name="segmentThreshold" type="xsd:long" minOccurs="0"/>
      <xsd:element name="milesStatusMissing" type="xsd:long" minOccurs="0"/>
      <xsd:element name="qualifyingSegmentMissing" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="DTypeStatus">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeStatusFB">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeSubtier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeNextSubtier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeNextSubtierLevel">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeMemberType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeNextMemberType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeOldMemberType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeMemberTypeChangeUser">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeOriginMember">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeQualificationStatus">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeMilesExpiryType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypePtc">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeCommunicationMedia">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeEliteLevel">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeCodeCbcPartnerData">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeCodeNextTierPossibleData">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DTypeCodeCurrentTierData">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- custom types declarations -->
  <!--PROTECTED REGION ID(osirisType.SicOsirisTypeV1.1) ENABLED START-->
	<!-- include your own xsd types here -->
  <!--PROTECTED REGION END-->
</xsd:schema>
